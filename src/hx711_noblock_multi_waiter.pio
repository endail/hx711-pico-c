; MIT License
; 
; Copyright (c) 2023 Daniel Robertson
; 
; Permission is hereby granted, free of charge, to any person obtaining a copy
; of this software and associated documentation files (the "Software"), to deal
; in the Software without restriction, including without limitation the rights
; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
; copies of the Software, and to permit persons to whom the Software is
; furnished to do so, subject to the following conditions:
; 
; The above copyright notice and this permission notice shall be included in all
; copies or substantial portions of the Software.
; 
; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
; SOFTWARE.

.program hx711_noblock_multi_waiter

.define APP_WAIT_IRQ_NUM 0
.define READ_BITS 24

.wrap_target
wrap_target:

irq wait APP_WAIT_IRQ_NUM rel

wait_chips_ready:
PUBLIC wait_in_pins_bit_count:
    in pins, 1              ; [REPLACE THE BIT COUNT IN THIS INSTRUCTION THROUGH C]
    mov isr, y              ; move pin bits to y
    jmp !y begin_read       ; all data pins are low (possibly replace with y--???)
    jmp wait_chips_ready    ; if not all pins low, go back and try again

begin_read:
    set y, READ_BITS        ; Read y number of bits. This is 0-based.

bitloop:
    set pins, 1             ; Set rising edge of clock pin.
PUBLIC bitloop_in_pins_bit_count:
    in pins, 1              ; [REPLACE THE BIT COUNT IN THIS INSTRUCTION THROUGH C]
    set pins, 0             ; clock low
    push block              ; push to TX FIFO
    jmp y-- bitloop         ; next read

pull noblock                ; pull in gain val if present
out x, 2
jmp !x wrap_target side 0
mov y, x

gainloop:
    set pins, 1
    jmp y-- gainloop side 0

.wrap

% c-sdk {
// MIT License
// 
// Copyright (c) 2023 Daniel Robertson
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

#include <assert.h>
#include <stdbool.h>
#include <stddef.h>
#include "hardware/clocks.h"
#include "hardware/pio.h"

void hx711_noblock_multi_waiter_program_init() {

}

%}
